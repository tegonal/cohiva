# Generated by Django 4.2.21 on 2025-08-22 14:59

from decimal import Decimal

import django.db.models.deletion
import select2.fields
from django.conf import settings
from django.db import migrations, models

import cohiva.utils.settings
import reservation.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geno", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=100, verbose_name="Betreff")),
                (
                    "contact_text",
                    models.CharField(blank=True, max_length=300, verbose_name="Erreichbarkeit"),
                ),
                ("text", models.TextField(default="", verbose_name="Beschreibung")),
                ("report_date", models.DateTimeField(verbose_name="Meldungsdatum")),
                ("status_date", models.DateTimeField(verbose_name="Statusdatum")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "Neu"),
                            ("open", "Offen"),
                            ("closed", "Erledigt"),
                            ("invalid", "Ungültig"),
                            ("deleted", "Gelöscht"),
                        ],
                        db_index=True,
                        default="new",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Meldung",
                "verbose_name_plural": "Meldungen",
            },
        ),
        migrations.CreateModel(
            name="ReportType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=50, unique=True, verbose_name="Meldungstyp")),
            ],
            options={
                "verbose_name": "Meldungstyp",
                "verbose_name_plural": "Meldungstypen",
            },
        ),
        migrations.CreateModel(
            name="ReservationUsageType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=50, unique=True, verbose_name="Name")),
                ("label", models.CharField(max_length=50, verbose_name="Bezeichnung")),
            ],
            options={
                "verbose_name": "Nutzungsart",
                "verbose_name_plural": "Nutzungsarten",
            },
        ),
        migrations.CreateModel(
            name="ReservationType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="Reservationstyp"),
                ),
                ("fixed_time", models.BooleanField(default=False, verbose_name="Fixe Uhrzeiten")),
                (
                    "default_time_start",
                    models.TimeField(default="10:00", verbose_name="Standardzeit Beginn"),
                ),
                (
                    "default_time_end",
                    models.TimeField(default="12:00", verbose_name="Standardzeit Ende"),
                ),
                (
                    "summary_required",
                    models.BooleanField(
                        default=False,
                        verbose_name="Text mit Anlass/Grund der Reservation benötigt?",
                    ),
                ),
                (
                    "required_role",
                    models.CharField(
                        choices=[
                            ("user", "Alle aktiven Benutzer:innen"),
                            ("member", "Alle Mitglieder"),
                            ("renter", "Alle Mieter:innen"),
                            ("community", "Alle in der Siedlung"),
                        ],
                        default="renter",
                        max_length=30,
                        verbose_name="Verfügbar für",
                    ),
                ),
                (
                    "confirmation_email_sender",
                    models.CharField(
                        default=cohiva.utils.settings.get_default_app_sender,
                        help_text="Format: '\"Vorname Name\" &lt;email@example.com&gt;'",
                        max_length=100,
                        verbose_name="Absender Bestätigungs-Email",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#7d7d78",
                        help_text='Format: "#rrggbb"',
                        max_length=7,
                        verbose_name="Kalender-Farbe",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "confirmation_email_template",
                    select2.fields.ForeignKey(
                        blank=True,
                        help_text="Leer lassen falls keine Bestätigung gesendet werden soll.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geno.contenttemplate",
                        verbose_name="Vorlage Bestätigungs-Email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservationstyp",
                "verbose_name_plural": "Reservationstypen",
            },
        ),
        migrations.CreateModel(
            name="ReservationObject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=80, verbose_name="Name")),
                (
                    "short_description",
                    models.CharField(
                        blank=True, default="", max_length=300, verbose_name="Kurzbeschreibung"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, default="", verbose_name="Beschreibung"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="",
                        upload_to="reservation/images/",
                        verbose_name="Bild",
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        help_text="Sollte nicht mehr verwendet werden. Neu wird der Preis über Reservationstarife via Nutzungsarten festgelegt.",
                        max_digits=7,
                        verbose_name="Preis (ALT)",
                    ),
                ),
                (
                    "reservation_type",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reservation.reservationtype",
                        verbose_name="Reservationstyp",
                    ),
                ),
                (
                    "usage_types",
                    models.ManyToManyField(
                        blank=True,
                        related_name="reservationusagetype_reservationobjects",
                        to="reservation.reservationusagetype",
                        verbose_name="Nutzungsarten",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservationsobjekt",
                "verbose_name_plural": "Reservationsobjekte",
                "unique_together": {("name", "reservation_type")},
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                (
                    "contact_text",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Kontaktperson (alternativer Text)",
                    ),
                ),
                ("flink_user_id", models.IntegerField(null=True, verbose_name="Flink UserID")),
                ("date_start", models.DateTimeField(verbose_name="Beginn Reservation")),
                ("date_end", models.DateTimeField(verbose_name="Ende Reservation")),
                (
                    "summary",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Kurze Beschreibung des Anlasses/Grund der Reservation",
                        max_length=120,
                        verbose_name="Beschreibung",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("new", "Neu"),
                            ("approved", "Bestätigt"),
                            ("cancelled", "Gecancelt"),
                            ("deleted", "Gelöscht"),
                        ],
                        db_index=True,
                        default="new",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
                (
                    "key_number",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Nummer des ausgegebenen Schlüssels.",
                        max_length=10,
                        verbose_name="Schlüsselnr.",
                    ),
                ),
                (
                    "key_back",
                    models.BooleanField(
                        default=False,
                        help_text="Ankreuzen wenn der Schlüssel zurückgegeben wurde.",
                        verbose_name="Zurück?",
                    ),
                ),
                (
                    "billed",
                    models.BooleanField(
                        default=False,
                        help_text="Ankreuzen wenn für die Reservation eine Rechnung gestellt wurde.",
                        verbose_name="Verrechnet?",
                    ),
                ),
                ("remark", models.TextField(blank=True, default="", verbose_name="Bemerkungen")),
                (
                    "additional_information",
                    models.TextField(blank=True, default="", verbose_name="Zusatzinfos"),
                ),
                (
                    "is_auto_blocker",
                    models.BooleanField(
                        default=False, verbose_name="Automatisch eingefügter Reservations-Blocker"
                    ),
                ),
                (
                    "flink_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default=None,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Flink reservation ID",
                    ),
                ),
                (
                    "contact",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geno.address",
                        verbose_name="Kontaktperson",
                    ),
                ),
                (
                    "name",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reservation.reservationobject",
                        verbose_name="Objekt",
                    ),
                ),
                (
                    "usage_type",
                    select2.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reservation.reservationusagetype",
                        verbose_name="Nutzungsart",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservation",
                "verbose_name_plural": "Reservationen",
                "ordering": ["-date_start"],
            },
        ),
        migrations.CreateModel(
            name="ReportLogEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("text", models.TextField(verbose_name="Text")),
                (
                    "name",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reservation.report",
                        verbose_name="Meldung",
                    ),
                ),
                (
                    "user",
                    select2.fields.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor:in",
                    ),
                ),
            ],
            options={
                "verbose_name": "Logbucheintrag",
                "verbose_name_plural": "Logbucheinträge",
            },
        ),
        migrations.CreateModel(
            name="ReportCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=50, verbose_name="Kategorie")),
                (
                    "report_type",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reservation.reporttype",
                        verbose_name="Meldungstyp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kategorie",
                "verbose_name_plural": "Kategorien",
                "unique_together": {("name", "report_type")},
            },
        ),
        migrations.AddField(
            model_name="report",
            name="category",
            field=select2.fields.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reservation.reportcategory",
                verbose_name="Kategorie",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="contact",
            field=select2.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="geno.address",
                verbose_name="Kontaktperson",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="rental_unit",
            field=select2.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="geno.rentalunit",
                verbose_name="Mietobjekt",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="report_type",
            field=select2.fields.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reservation.reporttype",
                verbose_name="Meldungstyp",
            ),
        ),
        migrations.CreateModel(
            name="ReservationPrice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=50, verbose_name="Bezeichnung")),
                (
                    "priority",
                    models.IntegerField(
                        default=1,
                        help_text="Es wird der erste Preis angewendet, auf welchen die Dauer der Reservation zutrifft (in aufteigender Prioritäts-Reihenfolge)",
                        verbose_name="Priorität",
                    ),
                ),
                (
                    "time_unit",
                    models.CharField(
                        choices=[("hours", "Stunden"), ("days", "Tage")],
                        default="hours",
                        max_length=20,
                        verbose_name="Zeit-Einheit",
                    ),
                ),
                (
                    "duration_min",
                    models.FloatField(
                        default=0,
                        help_text="Trifft auf Reservationen zu, deren Dauer mindestens diesem Wert entspricht.",
                        verbose_name="Min. Dauer",
                    ),
                ),
                (
                    "duration_max",
                    models.FloatField(
                        default=9999,
                        help_text="Trifft auf Reservationen zu, deren Dauer maximal diesem Wert entspricht.",
                        verbose_name="Max. Dauer",
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=7, verbose_name="Preis"
                    ),
                ),
                (
                    "cost_type",
                    models.CharField(
                        choices=[("fixed", "Fixpreis"), ("per_time_unit", "pro Zeiteinheit")],
                        default="per_time_unit",
                        max_length=20,
                        verbose_name="Preis-Modus",
                    ),
                ),
                (
                    "usage_type",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reservation.reservationusagetype",
                        verbose_name="Reservations Nutzungsart",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservationstarif",
                "verbose_name_plural": "Reservationstarife",
                "unique_together": {("usage_type", "priority")},
            },
        ),
        migrations.CreateModel(
            name="ReportPicture",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Geändert")),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "image",
                    models.ImageField(
                        upload_to=reservation.models.report_picture_path, verbose_name="Bild"
                    ),
                ),
                (
                    "report",
                    select2.fields.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reservation.report",
                        verbose_name="Meldung",
                    ),
                ),
            ],
            options={
                "verbose_name": "Meldungsbild",
                "verbose_name_plural": "Meldungsbilder",
                "unique_together": {("image", "report")},
            },
        ),
    ]
