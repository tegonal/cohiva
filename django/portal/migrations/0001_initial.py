# Generated by Django 4.2.21 on 2025-08-22 14:59

import django.db.models.deletion
import select2.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("geno", "0001_initial"),
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
    ]

    operations = [
        migrations.CreateModel(
            name="PortalHelpPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "Portal Hilfe Seite",
                "verbose_name_plural": "Portal Hilfe Seiten",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="PortalHelpPageSection",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "parts",
                    wagtail.fields.StreamField(
                        [
                            (
                                "abschnitte",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("frage", wagtail.blocks.CharBlock()),
                                        (
                                            "antwort",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "abschnitt",
                                                        wagtail.blocks.RichTextBlock(
                                                            features=[
                                                                "underline",
                                                                "link",
                                                                "document-link",
                                                            ]
                                                        ),
                                                    ),
                                                    ("untertitel", wagtail.blocks.CharBlock()),
                                                    (
                                                        "video",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.CharBlock(),
                                                                ),
                                                                (
                                                                    "legende",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "einzelbild",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "bild",
                                                                    wagtail.images.blocks.ImageChooserBlock(),
                                                                ),
                                                                (
                                                                    "legende",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "bilder",
                                                        wagtail.blocks.ListBlock(
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "bild",
                                                                        wagtail.images.blocks.ImageChooserBlock(),
                                                                    ),
                                                                    (
                                                                        "legende",
                                                                        wagtail.blocks.CharBlock(
                                                                            required=False
                                                                        ),
                                                                    ),
                                                                ]
                                                            )
                                                        ),
                                                    ),
                                                    (
                                                        "aufzaehlung",
                                                        wagtail.blocks.ListBlock(
                                                            wagtail.blocks.CharBlock()
                                                        ),
                                                    ),
                                                    (
                                                        "nummerierung",
                                                        wagtail.blocks.ListBlock(
                                                            wagtail.blocks.CharBlock()
                                                        ),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    template="portal/blocks/hilfe_section.html",
                                ),
                            )
                        ],
                        use_json_field=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="PortalPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "Portal Seite",
                "verbose_name_plural": "Portal Seiten",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="TenantAdmin",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comment", models.CharField(blank=True, max_length=500, verbose_name="Comment")),
                ("ts_created", models.DateTimeField(auto_now_add=True, verbose_name="Erstellt")),
                ("ts_modified", models.DateTimeField(auto_now=True, verbose_name="Ge√§ndert")),
                ("notes", models.TextField(blank=True, verbose_name="Bemerkungen")),
                ("active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "buildings",
                    models.ManyToManyField(
                        related_name="building_tenantadmins",
                        to="geno.building",
                        verbose_name="Admin f√ºr Geb√§ude",
                    ),
                ),
                (
                    "name",
                    select2.fields.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="address_tenantadmin",
                        to="geno.address",
                        verbose_name="Person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nutzeradmin",
                "verbose_name_plural": "Nutzeradmins",
                "ordering": ["name"],
            },
        ),
    ]
